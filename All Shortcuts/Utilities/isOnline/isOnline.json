{
    "WFWorkflowMinimumClientVersionString": "900",
    "WFWorkflowMinimumClientVersion": 900,
    "WFWorkflowIcon": {
        "WFWorkflowIconStartColor": 2846468607,
        "WFWorkflowIconGlyphNumber": 61440
    },
    "WFWorkflowClientVersion": "3612.0.2.2",
    "WFWorkflowOutputContentItemClasses": [
        "WFBooleanContentItem"
    ],
    "WFWorkflowHasOutputFallback": false,
    "WFWorkflowActions": [
        {
            "WFWorkflowActionIdentifier": "is.workflow.actions.comment",
            "WFWorkflowActionParameters": {
                "WFCommentActionText": "üôè Original by: [@atnbueno](https://www.reddit.com/user/atnbueno)"
            }
        },
        {
            "WFWorkflowActionIdentifier": "is.workflow.actions.gettext",
            "WFWorkflowActionParameters": {
                "WFTextActionText": "if (navigator.onLine) {\n    r = new XMLHttpRequest()\n    r.open('GET', 'https://dummyjson.com/test', false)\n}\n\ntry {\n    r.send(null)\n    isOnline = 'true'\n} catch (e) {\n    isOnline = 'false'\n}\n\ndocument.write(isOnline)",
                "UUID": "C7163D15-6881-457B-AC9B-0D99C3F088AD"
            }
        },
        {
            "WFWorkflowActionIdentifier": "is.workflow.actions.runworkflow",
            "WFWorkflowActionParameters": {
                "WFInput": {
                    "Value": {
                        "OutputUUID": "C7163D15-6881-457B-AC9B-0D99C3F088AD",
                        "Type": "ActionOutput",
                        "OutputName": "Text"
                    },
                    "WFSerializationType": "WFTextTokenAttachment"
                },
                "WFWorkflow": {
                    "workflowIdentifier": "E2CEB2A0-A1D2-4040-B3D2-804B9C84CAE8",
                    "workflowName": "Run JavaScript Code",
                    "isSelf": false
                },
                "UUID": "323D6DE5-507A-440D-BF8E-52C9D2FA0389",
                "WFWorkflowName": "Run JavaScript Code"
            }
        },
        {
            "WFWorkflowActionIdentifier": "is.workflow.actions.comment",
            "WFWorkflowActionParameters": {
                "WFCommentActionText": "Alternative approach: simply use the \"Get Current IP Address\" action!"
            }
        },
        {
            "WFWorkflowActionIdentifier": "is.workflow.actions.output",
            "WFWorkflowActionParameters": {
                "WFOutput": {
                    "Value": {
                        "string": "Ôøº",
                        "attachmentsByRange": {
                            "{0, 1}": {
                                "Type": "ActionOutput",
                                "OutputName": "Shortcut Result",
                                "OutputUUID": "323D6DE5-507A-440D-BF8E-52C9D2FA0389",
                                "Aggrandizements": [
                                    {
                                        "Type": "WFCoercionVariableAggrandizement",
                                        "CoercionItemClass": "WFBooleanContentItem"
                                    }
                                ]
                            }
                        }
                    },
                    "WFSerializationType": "WFTextTokenString"
                }
            }
        }
    ],
    "WFWorkflowInputContentItemClasses": [
        "WFAppStoreAppContentItem",
        "WFArticleContentItem",
        "WFContactContentItem",
        "WFDateContentItem",
        "WFEmailAddressContentItem",
        "WFGenericFileContentItem",
        "WFImageContentItem",
        "WFiTunesProductContentItem",
        "WFLocationContentItem",
        "WFDCMapsLinkContentItem",
        "WFAVAssetContentItem",
        "WFPDFContentItem",
        "WFPhoneNumberContentItem",
        "WFRichTextContentItem",
        "WFSafariWebPageContentItem",
        "WFStringContentItem",
        "WFURLContentItem"
    ],
    "WFWorkflowImportQuestions": [],
    "WFWorkflowTypes": [
        "Watch"
    ],
    "WFQuickActionSurfaces": [],
    "WFWorkflowHasShortcutInputVariables": false
}